{"version":3,"sources":["container/hat.gif","container/App.js","reportWebVitals.js","index.js"],"names":["App","fetchQuotes","req","res","a","fetch","response","json","data","setState","QuoteText","content","Author","author","console","log","newQuote","state","this","className","src","hat","alt","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAe,MAA0B,gC,eC2D1BA,E,kDArDb,aAAc,IAAD,8BACX,gBAaFC,YAda,uCAcC,WAAOC,EAAKC,GAAZ,iBAAAC,EAAA,+EAEaC,MAAM,kCAFnB,cAEJC,EAFI,gBAGSA,EAASC,OAHlB,OAGJC,EAHI,OAIV,EAAKC,SAAS,CACZC,UAAWF,EAAKG,QAChBC,OAAQJ,EAAKK,SANL,kDASVC,QAAQC,IAAR,MATU,0DAdD,0DA0BbC,SAAW,WACX,EAAKf,eAzBH,EAAKgB,MAAQ,CACXP,UAAW,GACXE,OAAQ,IAJC,E,qDAQb,WACEM,KAAKjB,cACLiB,KAAKF,a,oBAoBP,WACE,IAAQN,EAAcQ,KAAKD,MAAnBP,UACAE,EAAWM,KAAKD,MAAhBL,OACAI,EAAaE,KAAbF,SACR,OACE,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAKF,UAAU,WAAWG,IAAI,SACxC,oBAAIH,UAAU,QAAd,oCACA,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,OAAf,eAA0BT,EAA1B,QACA,sBAAKS,UAAU,SAAf,cAA2BP,UAG/B,wBAAQW,QAAUP,EAAWG,UAAU,YAAvC,gC,GA/CQK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e56cc40d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hat.c55676e8.gif\";","import React, { Component } from 'react';\nimport hat from './hat.gif';\nimport './App.css';\n\nclass App extends Component {\n  \n  constructor(){\n    super()\n    this.state = {\n      QuoteText: '',\n      Author: '',\n    }\n  }\n\n  componentDidMount(){\n    this.fetchQuotes();\n    this.newQuote();\n  }\n\n  \n  fetchQuotes = async (req, res) => {\n    try{\n      const response = await fetch('https://api.quotable.io/random');\n      const data = await response.json();\n      this.setState({\n        QuoteText: data.content,\n        Author: data.author,\n      })\n    }catch(err){\n      console.log(err);\n    }\n  }\n  newQuote = () => {\n  this.fetchQuotes();\n }\n\n  render() {\n    const { QuoteText } = this.state;\n    const { Author } = this.state;\n    const { newQuote } = this;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={hat} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"title\">Random Quote Generator</h1>\n          <div className=\"quote-box\">\n            <div className=\"quote-content\">\n              <div className=\"text\">\" { QuoteText } \"</div>\n              <div className=\"author\">-{ Author }</div>\n            </div>\n          </div>\n          <button onClick={ newQuote } className=\"new-quote\">New Quote</button>\n        </header>\n      </div>\n    );\n  }  \n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}